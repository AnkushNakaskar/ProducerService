buildscript {
    ext {
        springBootVersion = '2.0.4.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('io.spring.gradle:dependency-management-plugin:0.5.4.RELEASE')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'maven'
apply plugin: "jacoco"
apply plugin: 'io.spring.dependency-management'
apply plugin: 'project-report'

jar {
    baseName = project.app
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

group 'com.servicemesh.customer'
version '1.0-SNAPSHOT'


repositories {
    maven {
        url "https://repo.spring.io/milestone"
    }
    mavenCentral()
    mavenLocal()
}
configurations.all {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    exclude group: 'org.springframework.boot', module: 'logback-classic'
}

ext {
    springCloudVersion = 'Finchley.RELEASE'
}

dependencies {
    //Basics
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-hateoas'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop'

    //Commons
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.2'

    //Jackson
    runtime group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.8.5'
    runtime group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.8.5'

    compileOnly group: 'org.projectlombok', name: 'lombok', version:'1.16.16'

    //test
    testCompile group: 'org.springframework.boot', name:'spring-boot-starter-test'
    testCompile group: 'org.powermock', name:'powermock-module-junit4', version:'1.7.4'
    testCompile group: 'org.powermock', name:'powermock-api-mockito2', version:'1.7.4'
    testCompile group: 'com.h2database', name:'h2', version:'1.4.197'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}


dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

springBoot {
    mainClassName = 'com.servicemesh.producer.ProducerServiceApplication'
}

bootJar {
    mainClassName = 'com.servicemesh.producer.ProducerServiceApplication'
}

bootRun {
    systemProperty 'spring.profiles.active', System.properties['spring.profiles.active']
    def cp = CollectionUtils.join(File.pathSeparator, classpath.getFiles())
    environment 'CLASSPATH', cp
    classpath = classpath.filter { false }
    if (project.hasProperty("debugPort")){
        jvmArgs = ['-Xdebug', '-Xrunjdwp:server=y,transport=dt_socket,suspend=n,address=' + debugPort]
    }
}
